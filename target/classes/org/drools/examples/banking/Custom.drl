package org.drools.examples.banking;
//dialect  "mvel"
import java.util.ArrayList

rule "Last bank deposit"
    when
    $cashflow : CustomCashflow( $account : receiver,
                                           $date : date, $amount : amount, $bank : receivingBank,
                                            type==CustomCashflow.DEPOSIT )
            ArrayList( $total : size == 1 ) from collect( CustomCashflow(  ) )
    then
            System.out.println("DEPOSIT OPERATION: \nAccount " + $account.getAccountNo() +  " (" + $account.getBank().getBankName() + "): " + "\nAmount: " + $amount + "\nDate: " + $date);
            $account.setBalance($account.getBalance()+$amount);
            System.out.println("New balance: " + $account.getBalance() + '\n');
            System.out.println("\n------------------------------\n"
             + $account.getBank().getBankName() + " BALANCE AFTER ALL OPERATIONS: " + $account.getBank().getBankBalance() + "\n------------------------------\n");
            delete($cashflow);
end

rule "Last bank withdrawal"
    when
    $cashflow : CustomCashflow( $account : receiver,
                                           $date : date, $amount : amount, $bank : receivingBank,
                                            type==CustomCashflow.WITHDRAWAL )
            ArrayList( $total : size == 1 ) from collect( CustomCashflow(  ) )
    then
            System.out.println("WITHDRAWAL OPERATION: \nAccount " + $account.getAccountNo() +  " (" + $account.getBank().getBankName() + "): " + "\nAmount: " + $amount + "\nDate: " + $date);
            $account.setBalance($account.getBalance()-$amount);
            System.out.println("New balance: " + $account.getBalance() + '\n');
            System.out.println("\n------------------------------\n"
             + $account.getBank().getBankName() + " BALANCE AFTER ALL OPERATIONS: " + $account.getBank().getBankBalance() + "\n------------------------------\n");
            delete($cashflow);
end

rule "Last bank transfer"
    when
            $cashflow : CustomCashflow( $sender : sender, $receiver : receiver,
                                                       $date : date, $amount : amount, $bank : receivingBank,
                                                        type==CustomCashflow.TRANSFER )
                     ArrayList( $total : size == 1 ) from collect( CustomCashflow(  ) )
        then
                    System.out.println("TRANSFER OPERATION: \nSender account " + $sender.getAccountNo() +  " (" + $sender.getBank().getBankName() + "): " + "\nAmount: " + $amount + "\nTo account " +
                    $receiver.getAccountNo() + " (" + $receiver.getBank().getBankName() +   ")\nDate: " + $date);
                    $sender.setBalance($sender.getBalance()-$amount);
                    $receiver.setBalance($receiver.getBalance()+$amount);
                    System.out.println($sender.getAccountNo() + " account new balance: " + $sender.getBalance());
                    System.out.println($receiver.getAccountNo() + " account new balance: " + $receiver.getBalance());
                    System.out.println("\n------------------------------\n"
                                 + $sender.getBank().getBankName() + " BALANCE AFTER ALL OPERATIONS: " + $sender.getBank().getBankBalance() + "\n------------------------------");
                    System.out.println("\n------------------------------\n"
                                                     + $receiver.getBank().getBankName() + " BALANCE AFTER ALL OPERATIONS: " + $receiver.getBank().getBankBalance() + "\n------------------------------\n");
                    delete($cashflow);
end

rule "Deposit"
    when
    $cashflow : CustomCashflow( $account : receiver,
                                           $date : date, $amount : amount, $bank : receivingBank,
                                            type==CustomCashflow.DEPOSIT )
            not CustomCashflow( receiver == $account, date < $date)
    then
            System.out.println("DEPOSIT OPERATION: \nAccount " + $account.getAccountNo() +  " (" + $account.getBank().getBankName() + "): " + "\nAmount: " + $amount + "\nDate: " + $date);
            $account.setBalance($account.getBalance()+$amount);
            System.out.println("New balance: " + $account.getBalance() + '\n');
            delete($cashflow);
end

rule "Withdrawal"
    when
        $cashflow : CustomCashflow( $account : receiver,
                                               $date : date, $amount : amount,
                                                type==CustomCashflow.WITHDRAWAL )
                not CustomCashflow( receiver == $account, date < $date )
        then
                System.out.println("WITHDRAWAL OPERATION: \nAccount " + $account.getAccountNo() +  " (" + $account.getBank().getBankName() + "): " + "\nAmount: " + $amount + "\nDate: " + $date);
                $account.setBalance($account.getBalance()-$amount);
                System.out.println("New balance: " + $account.getBalance() + '\n');
                delete($cashflow);
end

rule "Transfer"
    when
        $cashflow : CustomCashflow( $sender : sender, $receiver : receiver,
                                                   $date : date, $amount : amount,
                                                    type==CustomCashflow.TRANSFER )
                    not CustomCashflow( receiver == $receiver, date < $date )
    then
                System.out.println("TRANSFER OPERATION: \nSender account " + $sender.getAccountNo() +  " (" + $sender.getBank().getBankName() + "): " + "\nAmount: " + $amount + "\nTo account " +
                $receiver.getAccountNo() + " (" + $receiver.getBank().getBankName() +   ")\nDate: " + $date);
                $sender.setBalance($sender.getBalance()-$amount);
                $receiver.setBalance($receiver.getBalance()+$amount);
                System.out.println($sender.getAccountNo() + " account new balance: " + $sender.getBalance());
                System.out.println($receiver.getAccountNo() + " account new balance: " + $receiver.getBalance() + '\n');
                delete($cashflow);
end
